from pathlib import Path
import os

BASE_DIR = Path(__file__).resolve().parent.parent

# üîê –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY", "your-default-insecure-key")

# üö´ –û—Ç–∫–ª—é—á–∞–µ–º debug –≤ –ø—Ä–æ–¥–∞–∫—à–Ω-—Å—Ä–µ–¥–µ
DEBUG = os.environ.get("DEBUG", "False") == "True"

# üåç –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —Ö–æ—Å—Ç—ã
ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS", "127.0.0.1,localhost").split(",")

# üë§ –ö–∞—Å—Ç–æ–º–Ω–∞—è –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
AUTH_USER_MODEL = 'accounts.CustomUser'

# üì¶ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
]

# üß± Middleware (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å whitenoise –¥–ª—è Railway/Heroku)
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # ‚úÖ –Ω—É–∂–Ω–æ –¥–ª—è Railway!
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'lab4.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lab4.wsgi.application'

# üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (–º–æ–∂–Ω–æ –ø–æ–∑–∂–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å PostgreSQL –æ—Ç Railway)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# üß† –ö–ª—é—á OpenAI
OPENAI_API_KEY = os.environ.get("OPENAI_API_KEY", "")

# üîê –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª–µ–π
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 6,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# üåê –ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Almaty'  # –ò–ª–∏ 'UTC'
USE_I18N = True
USE_TZ = True

# üóÇÔ∏è –°—Ç–∞—Ç–∏–∫–∞
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # ‚úÖ –¥–ª—è collectstatic

# üìÅ –ú–µ–¥–∏–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# üìå –ê–≤—Ç–æ ID
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
